<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ventana</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set initial variables.
list = ds_list_create();
randomize();
local_y = y;
get_father = false;
building_father = 0;
image_speed = 0;
cerrar = false;  
creado = false;
soldado = 0;
nino = 0;
mujer = 0;
var a = choose(0,1,2);
switch(a){
    case 0:
        image_alpha = 0;
        alarm[1] = choose(750, 900);
    break;
    case 1:
        image_index = 0;
        alarm[1] = choose(750, 900);
    break;
    case 2:
        image_index = 1;
        alarm[0] = choose(120,240,180);
        alarm[1] = 1350;
    break;
}
inst = noone;
//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the soldier.
ds_list_destroy(list);
if(instance_exists(inst)){
    with(inst){
        
        instance_destroy();
        alarm[0] = -1;
        alarm[1] = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ventana en espera
if (image_alpha == 0){
    image_alpha = 1;
    alarm[1] = choose(600,750, 900);
}else if (image_index == 0){
    if (cerrar){
        image_alpha = 0;
        alarm[1] = choose(600,750, 900);
        cerrar = false;
    }else{
    image_index = 1;
    alarm[0] = 90;
    alarm[1] = 1350;
    }
}else{
    image_index = 0;        
    cerrar = true;
    alarm[1] = 66;
    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ventana abierta genera soldados , ni√±os y mujer
switch(num_level){
    case 1:
        soldado = 2;
        mujer = 1;
        nino = 1;
    break;
    case 2:
        soldado = 4;
        mujer = 1;
        nino = 2;
    break;
    case 3:
        soldado = 6;
        mujer = 1;
        nino = 3;
    break;
    case 4:
        soldado = 5;
        mujer = 2;
        nino = 3;
    break;
    case 5:
        soldado = 6;
        mujer = 2;
        nino = 4;
    break;
    case 6:
        soldado = 8;
        mujer = 1;
        nino = 2;
    break;
    case 7:
        soldado = 2;
        mujer = 1;
        nino = 2;
    break;
    case 8:
        soldado = 5;
        mujer = 2;
        nino = 3;
    break;
    case 9:
        soldado = 7;
        mujer = 1;
        nino = 5;
    break;
    case 10:
        soldado = 8;
        mujer = 1;
        nino = 3;
    break;
}
if (instance_number(Soldado)&lt;soldado){
    if (!creado and image_index == 1){
        inst = instance_create(x,y,Soldado);
        creado = true;
    }
}else{
    if (instance_number(Women)&lt;mujer and !instance_exists(Women_Run)){
        if (!creado and image_index == 1){
            inst = instance_create(x,y,Women);
            creado = true;
            }
        }else if (instance_number(Child)&lt;nino){
            if (!creado and image_index == 1){
                inst = instance_create(x,y,Child);
                creado = true;
            }
        }
}
    alarm[0] = choose(120,240,180);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the window father.

if(!get_father){
    
    // Create a list with buildings ids.
    var father_list = ds_list_create();
    father_list = instance_nearest_list(x, y, Edificio);
    
    // Get collision buildings.
  //  show_debug_message('here');
    for(var i = 0; i &lt; ds_list_size(father_list); i++){
        if(position_meeting(x, y, ds_list_find_value(father_list, i))){
            
          //  show_debug_message(string(id) + " - time: " + string(i));
          //  show_debug_message(ds_list_find_value(father_list, i));
            
            ds_list_add(list, ds_list_find_value(father_list, i));
        }
     }
     
     if(ds_list_empty(list)){
        instance_destroy();  
       // show_debug_message("empty");
        exit;
     }
    
    // Organize the list according to building's depth.
    if(ds_list_size(list) &gt; 1){
        if(ds_list_find_value(list, 0).depth &gt; ds_list_find_value(list, 1).depth){
            var temp = ds_list_find_value(list, 0);
            ds_list_replace(list, 0, ds_list_find_value(list, 1));
            ds_list_replace(list, 1, temp);
        }
    }/*else{
        instance_destroy();
        exit;
    }*/
    
    // Set window's father.
    building_father = ds_list_find_value(list, 0);
 //   if(building_father == noone) instance_destroy();
   // with ds_list_find_value(list, 0) color = c_red;
   
    // Set new y.
    var diff = building_father.y - y;
    y = building_father.yy2 - diff;
    
    // Set depth.
    depth = building_father.depth - 1;
   
    // Set get father to true.
    get_father = true;
    
    
   // show_debug_message("i follow: " + string(building_father));
}

building_father = ds_list_find_value(list, 0);

// Follow y father building position.
if(instance_exists(building_father)){
    y = building_father.yy2 - (building_father.y - local_y);
    
    if(building_father.building_life &lt;= 0){
        alarm[0] = -1; alarm[1] = -1;
        if(instance_exists(inst)) with inst instance_destroy();
    }
}else{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Collapse">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
