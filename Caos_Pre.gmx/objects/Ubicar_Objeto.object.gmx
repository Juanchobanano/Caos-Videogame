<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay = 10;
weel_spd = 0.05;
angle_spd = 5;
mouse_dobleclick_init();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set_Focus();
var mouse_left = mouse_check_button(mb_left);
var mouse_right = mouse_check_button(mb_right);
var wheel_up = mouse_wheel_up();
var wheel_down = mouse_wheel_down();
var dobleclick = mouse_dobleclick_check(mb_left, delay);



if(mouse_left){
    if(wheel_up){
        image_angle += angle_spd;
    }else if(wheel_down){
        image_angle -= angle_spd;
    }else{
        if(position_meeting(mouse_x, mouse_y, self)){
            x = mouse_x;
            y = mouse_y;
        }
    }
}else{
    if(wheel_up){
        image_xscale += weel_spd;
        image_yscale += weel_spd;
    }else if(wheel_down){
        image_xscale -= weel_spd;
        image_yscale -= weel_spd;
    }
}

if(mouse_right){
    instance_destroy();
}

if(dobleclick){
    show_debug_message("Sprite Seleccionado: " + sprite_get_name(sprite_index));
    show_debug_message("Posición en x: " + string(x));
    show_debug_message("Posición en y: " + string(y));
    show_debug_message("Escala de X: " + string(image_xscale));
    show_debug_message("Escala de Y: " + string(image_yscale));
    show_debug_message("Rotación: " + string(image_angle));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
