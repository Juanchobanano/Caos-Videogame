<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
gravity = .1;
alarm[0] = irandom_range(35, 45);// 35 45
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create explosion!
instance_create(x, y, Destrucion);
audio_play_sound(choose(sn_punch_1, sn_punch_2, sn_punch_3, sn_punch_4), 1, 0);

// Destroy enemies near from the bomb.
var list = instance_nearest_list(x, y, Persona);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var person = ds_list_find_value(list, i);
    if(!instance_exists(person)) break;
    if(collision_circle(x, y, 40, person, 0, 0)){
        with (person) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
        if(room != game_intro) Get_Score(x, y, 50, false);
        
    }
}


var list = instance_nearest_list(x, y, Helicoptero);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var h = ds_list_find_value(list, i);
    if(!instance_exists(h)) break;
    if(collision_circle(x, y, 40, h, 0, 0)){
        with (h) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
       // Get_Score(x, y, 500, false);
        
    }
}


var list = instance_nearest_list(x, y, Tank);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var t = ds_list_find_value(list, i);
    if(!instance_exists(t)) break;
    if(collision_circle(x, y, 40, t, 0, 0)){
        with (t) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
      //  Get_Score(x, y, 300, false);
        
    }
}



// Destruir edificios.
/*if(room == game_intro){
    with(Control_Intro) buildings = true;
    if(instance_exists(Letrero)){
        with Letrero instance_destroy();
    }

}


/*
var list = instance_nearest_list(x, y, Helicopter_Intro);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var hi = ds_list_find_value(list, i);
    if(!instance_exists(hi)) break;
    if(collision_circle(x, y, 40, hi, 0, 0)){
        with (hi) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
       // Get_Score(x, y, 500, false);
        
    }
}
var list = instance_nearest_list(x, y, Tank2);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var t2 = ds_list_find_value(list, i);
    if(!instance_exists(t2)) break;
    if(collision_circle(x, y, 40, t2, 0, 0)){
        with (t2) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
       // Get_Score(x, y, 500, false);
        
    }
}

/*
var list = instance_nearest_list(x, y, Edificio);
for(var i = 0; i &lt; ds_list_size(list); i++){
    var e = ds_list_find_value(list, i);
    if(!instance_exists(e)) break;
    if(collision_circle(x, y, 40, e, 0, 0)){
        //with (person) instance_destroy();
        //Get_Score(person.x, person.y, 50, false);
        Get_Score(x, y, 100, false);
        Recieve_Damage("front", e);
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_speed &lt; 1){
    image_speed = image_speed + .2;
    alarm[0] = 10;
}else{
    if(game_intro) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += 5;
if(place_meeting(x, y, Persona) or place_meeting(x, y, Tank) or place_meeting(x, y, Floor)){
    instance_destroy();
}
if(place_meeting(x, y, Helicoptero)){
    var h = instance_nearest(x, y, Helicoptero);
    if(h.sprite_index = spr_helicopter_front){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
