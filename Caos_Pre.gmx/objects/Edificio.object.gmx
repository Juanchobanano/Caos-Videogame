<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Local variables.
down_speed = 1; // The speed of the destruction.
is_ready = false; // Fisures has covered all the building.
escombros_id = noone;
yy = sprite_height;
lt = noone; // Letrero.
lt2 = noone; // Letreros galan.
shake = noone;
color = c_white;
tutorial_building = false;
sumar_score = false;
image_index = 0;
image_speed = 0;
index_puerta = 0;
yy2 = self.y;
create_kids = true;

//show_debug_message(down_speed);

// Damage variables.
building_life = irandom_range(15, 25);
damage_grid = ds_grid_create(building_life, 3);
progress_time = 15;
execute_alarms = true;


// Fill the grid.
for(var i = 0; i &lt; ds_grid_width(damage_grid); i++){
    for(var j = 0; j &lt; ds_grid_height(damage_grid); j++){
        ds_grid_add(damage_grid, i, j, "");
    }
}

// Fisures variables.
/*max_fisures_array = ds_list_create();
max_fisures = floor(sprite_get_height(spr_edificios)/sprite_get_height(spr_fisures));
for(var i = 0; i &lt; max_fisures; i++){
    ds_list_add(max_fisures_array, false);
}

// Create enemies.
//Create_Enemies(num_level);

*/
//move_towards_point();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free memory.
ds_grid_destroy(damage_grid);

/*if(room == game_tutorial){
    audio_play_sound(sn_coronaste, 1, 0);
    with(Control_Tutorial) alarm[2] = 60;
    instance_create(room_width/2, room_height/2 - 30, Coronaste);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy instances.
with escombros_id instance_destroy();
instance_destroy();
with shake instance_destroy();
audio_stop_sound(sn_edificio_collapse);
if(instance_exists(Screen_Shake)) with Screen_Shake instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create fisure.
/*for(var i = 0; i &lt; max_fisures; i++){
    var var_pos = ds_list_find_value(max_fisures_array, i);
    if(!var_pos){
        ds_list_replace(max_fisures_array, i, true); 
        alarm[0] = progress_time;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Edificio</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check conditions to collapse the building.
if(building_life &lt;= 0 and execute_alarms and !instance_exists(Rage)){

     if(Player.climb){
         with(Player){
             climb = false; 
             grounded = false;
             climbed_building = noone;
             vsp = -jumpspeed;
             Jump_Hspeed();
             eating = false;
             retard = 0;
             Current_Sprite(asset_get_index("spr_player" + jugador + "_jump_" + humor + "_idle"), 0, choose(0,1,2));
             //sprite_index = asset_get_index("spr_player_jump_" + humor + "_idle");
             //image_index = choose(0,1,2);
         }
     }
     is_ready = true;
     shake = instance_create(0,0, Screen_Shake);
     execute_alarms = false;
     if(room != game_intro) Play_Track("collapse_building");
}

// If is ready, building collapse.
if(is_ready){

    // Final level.
    if(!instance_exists(Building_25)){
        if(instance_exists(Letrero)) with Letrero instance_destroy();
    }


    // Destroy the advertising if defined.
    if(lt != noone) with lt instance_destroy();
    if(lt2 != noone) with lt2 instance_destroy();
    if(!instance_exists(Screen_Shake)) instance_create(0,0,Screen_Shake);
    
    // Destroy the building.
    if(self.y + yy &gt; self.y){
    
       // show_debug_message(down_speed);
        yy -= down_speed;
       // show_debug_message(yy);
        if(!tutorial_building){ tutorial_building = true;  }
        yy2 += down_speed;
        if(escombros_id != noone) exit;
        escombros_id = instance_create(self.x + sprite_width/2, self.y - sprite_get_height(spr_collapse)/2, Collapse);
        
    }else{
        if(!sumar_score){
            sumar_score = false;
            if(room != game_intro) Get_Score(self.x + sprite_width/2, self.y - 50, 1000, false);
        }
    
        alarm[1] = 40;
        is_ready = false;
        
        // Crear ni√±os corriendo.
        Create_Kids();
        
        /*if(room != game_intro and instance_number(Edificio) == 1){
            var random_num = choose(2,3,4);
            for(var i = 0; i &lt; random_num; i++){
                instance_create(
                    irandom_range(self.x + 10, self.x + sprite_width - 10), 
                    412, 
                    Child_Run
                );
            }
        }*/
        
        
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (num_level &gt; 0 and instance_exists(Player) and room != game_intro){
    if (abs(Player.y1_ed - device_mouse_y(0)) &lt; 64  and abs(Player.x1_ed - device_mouse_x(0)) &lt; 64){
        if (Player.x_edificio == 0){
            Player.x_edificio = x;
            Player.w_edificio = sprite_width;
    //show_debug_message(Player.x_edificio);
        }
    }
}
//show_debug_message(Player.x_edificio);
//show_debug_message(y1);
//show_debug_message(Player.w_edificio);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the building.

    // Draw building.
    draw_sprite_part_ext(
        sprite_index, 
        index_puerta, 
        0, 
        0, 
        sprite_width, 
        yy, // sprite_height
        self.x,
        self.y - yy, // y position.
        1,
        1,
        color, 
        1
    );
    
    // Draw damage.
    for(var i = 0; i &lt; ds_grid_width(damage_grid); i++){
         
        //show_debug_message(ds_grid_get(damage_grid, i, 2));
        if(ds_grid_get(damage_grid, i, 2) == "") break ;
    
        var height = sprite_get_height(spr_building_damage);
    
        var xxd = ds_grid_get(damage_grid, i, 0);
        var yyd = ds_grid_get(damage_grid, i, 1);
        var index = ds_grid_get(damage_grid, i, 2);
        
        draw_sprite_part_ext(
            spr_building_damage, 
            index,
            0,
            0,
            sprite_get_width(spr_building_damage),
            height, 
            xxd, 
            yy2 - yyd, 
            1, 
            1, 
            c_white,
            1
        );
        
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
