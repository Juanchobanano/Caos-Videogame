<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_building_damage</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Local variables.
image_speed = 0;
//top = 0;
//height = sprite_get_height(spr_building_damage);
bdo = "";

building_father = instance_nearest(x, y, Edificio);
top = 0; height = sprite_get_height(sprite_index);
times = height;
calculate = false;

/*for(var i = 0; i &lt; times; i++){
    if(!collision_point(0, y - i, Edificio, true, true)){
        height++;
    }
    
    if(!collision_point(0, y + i, Edificio, true, true)){
        height--;
    }
}
show_debug_message(top);
show_debug_message(height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Damage</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw damage.
var index = image_index;
var scale = image_xscale;
draw_set_color(c_white);

// Set top and height sprites.
var top = 0;
var height = sprite_get_height(spr_building_damage);

for(var yy = 0; yy &lt; sprite_get_height(spr_building_damage); yy++){
    for(var xx = 0; xx &lt; sprite_get_width(spr_building_damage); xx++){    
        if(!collision_point(x + xx, y + yy, bdo, 1, 1)){
            top++; height--;
            break;
        }
    }
}
show_debug_message('top: ' + string(top));
show_debug_message('height: ' + string(height));

// Draw damage.
draw_sprite_part_ext(
    spr_building_damage, 
    index, 
    0, 
    top, 
    sprite_width, 
    height, 
    x, 
    y, 
    scale, 
    1, 
    1, 
    1
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
