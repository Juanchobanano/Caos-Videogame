<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_helicopter_back</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Declare initial values.
Helicopter_Variables();
hsound = false;

// Control position.
width_back = sprite_get_width(spr_helicopter_perfil)/2;
pos = x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear id in array.
/*with(Control_Helicopteros){
    var near_player_enemy = instance_nearest(Player.x, Player.y, Helicoptero);
    for(var i = 0; i &lt; num_level + 1; i++){
        if(near_player_enemy == h[i]){
            h[i] = noone;
        }
    }
}*/
alarm[0] = -1;
Get_Score(x, y, 500, false);
instance_create(x,y, Destrucion);
audio_stop_sound(sn_helicopter_front);
if(instance_number(Helicoptero) &gt; 1){
    var near = instance_nearest(x, y, Helicoptero);
    with (near) hsound = true;
}
/// DESTRUYE.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create bullets.
    var corner = noone;
    if(image_xscale == 1) corner = bbox_right; else corner = bbox_left;
    var bullet = instance_create(
        corner, 
        bbox_bottom - 5,
        Helicopter_Bullet
    );
    
    // Change image_index.
    if (image_xscale &lt; 0){
        with(bullet){ xscale = -1}
    }else{
        with(bullet){ xscale = 1}
    }
    with(bullet){
        var near_h = instance_nearest(x, y, Helicoptero);
        if(near_h.image_xscale == 1) image_index = 1;
        else image_index = 0;
    }

    // Restart alarm.
    alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Helicopter Mechanics.

    // Front helicopter.
    if(sprite_index != spr_helicopter_back){
        script_execute(state);
        
        if(hsound){
        
            if(audio_is_playing(sn_helicopter_behind)){
                audio_stop_sound(sn_helicopter_behind);
            }
            
            if(!audio_is_playing(sn_helicopter_front)){
                audio_play_sound(sn_helicopter_front, 1, 1);
            }
            
        }
        
        
            
    // Back helicopter.
    }else{
    
       hspeed = spd * image_xscale;
       attacked = false;        
        
       if(hsound){
            if(audio_is_playing(sn_helicopter_front)){
                audio_stop_sound(sn_helicopter_front);
            }
            
            if(!audio_is_playing(sn_helicopter_behind)){
                audio_play_sound(sn_helicopter_behind, 1, 1);
            }
        }

    }
    
    // Control position.
    if(pos &lt;= -width_back/2){
        if(self.x &gt;= room_width + width_back/2){
            pos = room_width + width_back/2;
            Helicopter_Change(id);
        }
    }else if(pos &gt;= room_width + width_back/2){
        if(self.x &lt;= -width_back/2){
            pos = -width_back/2;
            Helicopter_Change(id);
        }  
    }
    
    /*
    show_debug_message('speed: ' + string(hspeed));
    show_debug_message('x: ' + string(x));
    show_debug_message('y: ' + string(y));
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(Helicoptero) == 1){
    if(audio_is_playing(sn_helicopter_behind)){
        audio_sound_gain(sn_helicopter_behind, 0, 3000);
    }else if(audio_is_playing(sn_helicopter_front)){
        audio_sound_gain(sn_helicopter_front, 0, 3000);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increase out in 1.
out++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
